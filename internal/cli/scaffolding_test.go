package cli

import (
	"fmt"
	"kubernetes/pkg/schema/cluster/infrastructure/keda"
	"kubernetes/pkg/schema/generator"
	"os"
	"path"
	"testing"
)

var dummyMeta = generator.GeneratorMeta{
	Name:          "jellyfin",
	Namespace:     "jellyfin",
	GeneratorType: generator.App,
	ClusterUrl:    "jellyfin.jellyfin.svc.cluster.local",
	Port:          8096,
	Helm: &generator.Helm{
		Url:     "https://jellyfin.github.io/jellyfin-helm",
		Chart:   "jellyfin",
		Version: "10.7.7",
	},
	Caddy: &generator.Caddy{
		DNSName:                    "jellyfin.cluster",
		WebsocketSupportIsRequired: true,
	},
	KedaScaling: &keda.ScaledObjectTriggerMeta{
		Timezone:        "Europe/Vienna",
		Start:           "0 7 * * *",
		End:             "0 1 * * *",
		DesiredReplicas: "1",
	},
	DependsOnGenerators: []string{},
}

var generatedOutDir = "./internal/generators/apps/jellyfin"
var rootDir = "./"

func TestOutputFilesExist(t *testing.T) {
	generateGoFiles(dummyMeta, rootDir)
	_, err := os.Open(path.Join(generatedOutDir, "main.go"))
	if err != nil {
		t.Error("Could not find file generated by generateGoFiles")
	}
	err = os.RemoveAll("./internal")
	if err != nil {
		fmt.Println(err.Error())
		t.Error("Could not remove generated files")
	}
}
