---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/version: v3.5.0
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      annotations:
        proxy.istio.io/config: |-
          proxyMetadata:
          	OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: "[{\"name\": \"istio-certs\", \"mountPath\": \"/etc/istio-output-certs\"}]"
        traffic.sidecar.istio.io/includeInboundPorts: ""
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""
      labels:
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/version: v3.5.0
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - args:
        - --storage.tsdb.retention.time=30d
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/
        image: prom/prometheus:v3.5.0
        name: prometheus
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-configmap-volume
        - mountPath: /prometheus/
          name: mealie-pvc-volume
        - mountPath: /etc/prom-certs/
          name: istio-certs
      volumes:
      - name: mealie-pvc-volume
        persistentVolumeClaim:
          claimName: prometheus-pvc
      - name: prometheus-configmap-volume
        configMap:
          name: prometheus-configmap
          items: []
      - name: istio-certs
        emptyDir:
          medium: Memory
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsGroup: 65534
